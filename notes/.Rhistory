Treatment <- c('Drug','Drug','Drug','Placebo','Placebo','Placebo')
Treatment
# Factor variables in R
Treatment <- c('Drug','Drug','Drug','Placebo','Placebo','Placebo')
# define the object Treatment, overwrite
Treatment <- factor(Treatment)
print.default(Treatment)
# Factor variables in R
Treatment <- c('Drug','Drug','Drug','Placebo','Placebo','Placebo')
# define the object Treatment, overwrite
Treatment <- factor(Treatment,levels=c('Placebo','Drug'))
print.default(Treatment)
Treatment - 1
print.default(Treatment-1)
as.integer(Treatment) -1
# Factor variables in R
Treatment <- c('Drug','Drug','Drug','Placebo','Placebo','Placebo')
# define the object Treatment, overwrite
Treatment <- factor(Treatment,levels=c('Placebo','Drug'))
print.default(Treatment)
as.integer(Treatment) -1
# Factor variables in R
Treatment <- c('Drug','Drug','Drug','Placebo','Placebo','Placebo')
# define the object Treatment, overwrite
Treatment <- factor(Treatment,levels=c('Placebo','Drug'))
#print.default(Treatment)
Treatment <- as.integer(Treatment) -1
# Factor variables in R
Treatment <- c('Drug','Drug','Drug','Placebo','Placebo','Placebo')
# define the object Treatment, overwrite
Treatment <- factor(Treatment,levels=c('Placebo','Drug'))
#print.default(Treatment)
Treatment <- as.integer(Treatment) -1
Treatment
# Factor variables in R
Treatment <- c('Drug','Drug','Drug','Placebo','Placebo','Placebo')
# define the object Treatment, overwrite
Treatment <- factor(Treatment,levels=c('Placebo','Drug'))
#print.default(Treatment)
Treatment <- as.integer(Treatment) -1
Treatment
Age <- c(17,15,25,30,5,55)
Age
# Factor variables in R
Treatment <- c('Drug','Drug','Drug','Placebo','Placebo','Placebo')
# define the object Treatment, overwrite
Treatment <- factor(Treatment,levels=c('Placebo','Drug'))
#print.default(Treatment)
Treatment <- as.integer(Treatment) -1
Treatment
Age <- c(17,15,25,30,5,55)
Age
data.frame(Treatment,Age)
# Factor variables in R
Treatment <- c('Drug','Drug','Drug','Placebo','Placebo','Placebo')
# define the object Treatment, overwrite
Treatment <- factor(Treatment,levels=c('Placebo','Drug'))
#print.default(Treatment)
Treatment <- as.integer(Treatment) -1
Treatment
Age <- c(17,15,25,30,5,55)
Age
data.frame(my_Treatment=Treatment,Age)
# Factor variables in R
Treatment <- c('Drug','Drug','Drug','Placebo','Placebo','Placebo')
# define the object Treatment, overwrite
Treatment <- factor(Treatment,levels=c('Placebo','Drug'))
#print.default(Treatment)
Treatment <- as.integer(Treatment) -1
Treatment
Age <- c(17,15,25,30,5,55)
Age
my_df <- data.frame(my_Treatment=Treatment,Age)
colnames(my_df)
# Factor variables in R
Treatment <- c('Drug','Drug','Drug','Placebo','Placebo','Placebo')
# define the object Treatment, overwrite
Treatment <- factor(Treatment,levels=c('Placebo','Drug'))
#print.default(Treatment)
Treatment <- as.integer(Treatment) -1
Treatment
Age <- c(17,15,25,30,5,55)
Age
my_df <- data.frame(my_Treatment=Treatment,Age)
colnames(my_df)
my_df
my_df$Age
my_df[1,1]
View(my_df)
my_df[,1] # the first number for row position, second for col pos
my_df[,2] # the first number for row position, second for col pos
Number <- c(1, 4, 2, 5)
Letter <- c('a', 'r', 'g'. 'f')
Number <- c(1, 4, 2, 5)
Letter <- c('a', 'r', 'g', 'f')
Truth <- c(T, F, F, T)
demo_df <- data.frame(Number, Letter, Truth)
Number <- c(1, 4, 2, 5)
Letter <- c('a', 'r', 'g', 'f')
Truth <- c(T, F, F, T)
demo_df <- data.frame(Number, Letter, Truth)
demo_df
demo_df <- data.frame(Number=c(1,4,2,5), Letter=c('a','r','g','f'), Truth=c(T,F,F,T))
demo_df
demo_df <- data.frame(Number=c(1,4,2,5), Letter=c('a','r','g','f'), Truth=c(T,F,F,T))
demo_df
demo_df[3,2]
# same value, but instead uses "Letter"
demo_df$Letter
# same value, but instead uses "Letter"
demo_df$Letter[3]
# equivalent, but does not use "$"
demo_df[3,Letter]
# equivalent, but does not use "$"
demo_df[3,"Letter"]
# typeof() function returns the type of an object
demo_df$Letter
# typeof() function returns the type of an object
typeof(demo_df$Letter)
typeof(demo_df$Number)
typeof(demo_df$Truth)
X
# Functions
X<- c(1,2,3,4)
X
# returns the objects in memory
ls()
mean(X)
# equivalent to
(X[1]+X[2]+X[3]+X[4])/4
mean(X)
X[3] <- NA
X
mean(X)
mean(X,na.rm = T)
mean
mean <- c(1,2,3)
mean
find('mean')
rm(mean)
find('mean')
mean
fix(say_hi)
say_hi <- function(){
print('Hello World!')
}
View(say_hi)
View(say_hi)
say_hi()
my_number <- 2
# conditions in R
if(my_number < 0){
print('your number is negative!')
}
```
my_number <- 2
# conditions in R
if(my_number < 0){
print('your number is negative!')
}
if(my_number > 0){
print('your number is positive!')
}
# conditions in R
if(my_number < 0){
print('your number is negative!')
}
if else(my_number > 0){
my_number <- 2
# conditions in R
if(my_number < 0){
print('your number is negative!')
} else if(my_number > 0){
print('your number is positive!')
} else if(my_number == 0){
print('your number is zero!')
}
my_number <- 2
# conditions in R
if(my_number < 0){
print('your number is negative!')
} else if(my_number > 0){
print('your number is positive!')
} else (my_number == 0){
my_number <- 2
# conditions in R
if(my_number < 0){
print('your number is negative!')
} else if(my_number > 0){
print('your number is positive!')
} else (my_number == 0){
my_number <- 2
# conditions in R
if(my_number < 0){
print('your number is negative!')
} else if(my_number > 0){
print('your number is positive!')
} else {
print('your number is zero!')
}
my_number <- 0
# conditions in R
if(my_number < 0){
print('your number is negative!')
} else if(my_number > 0){
print('your number is positive!')
} else {
print('your number is zero!')
}
my_number <- -5
# conditions in R
if(my_number < 0){
print('your number is negative!')
} else if(my_number > 0){
print('your number is positive!')
} else {
print('your number is zero!')
}
my_func <- function(number){
if(number <0){
print('your number is negative!')
} else if(number>0){
print('your number is positive!')
} else {
print('your number is zero!')
}
}
my_func()
my_func(10)
my_func(-10)
my_func(0)
